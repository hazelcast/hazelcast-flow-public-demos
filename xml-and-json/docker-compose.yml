services:
   hazelcast-flow:
      image: "docker.io/hazelcast/hazelcast-flow:5.5.0"
      environment:
         MC_LICENSE: "${MC_LICENSE}"
         JAVA_OPTS: >-
            -XX:MaxRAMPercentage=50
            -XX:InitialRAMPercentage=50
         OPTIONS: >-
            --flow.analytics.persistRemoteCallResponses=true
            --flow.analytics.persistResults=true
            --flow.workspace.config-file=/opt/service/workspace/workspace.conf
            --flow.db.database=flow
            --flow.db.username=flow
            --flow.db.password=changeme
            --flow.db.host=postgres
            --flow.config.custom.managementCenterUrl=http://localhost:8080
            --flow.hazelcast.configYamlPath=/opt/hazelcast/config_ext/hazelcast.yml
      expose:
         - 9021
      ports:
         - "9021:9021"
      healthcheck:
         test: curl --fail http://localhost:9021/api/actuator/health || exit 1
         interval: 30s
         timeout: 5s
         retries: 3
      volumes:
         - .:/opt/service/workspace
         - type: bind
           source: ./hazelcast.yml
           target: /opt/hazelcast/config_ext/hazelcast.yml
      depends_on:
         - postgres
      deploy:
         restart_policy:
            condition: on-failure
         resources:
            limits:
               memory: 2gb

   management-center:
      image: "docker.io/hazelcast/management-center-flow:5.6.0"
      ports:
        - "8080:8080"
      healthcheck:
        test: curl --fail http://localhost:8080/health || exit 1
        interval: 30s
        timeout: 5s
        retries: 3
      environment:
        - JAVA_OPTS=-Dhazelcast.mc.flow.addresses=http://localhost:9021 -Dhazelcast.mc.flow.internalAddress=http://hazelcast-flow:9021
        - MC_DEFAULT_CLUSTER=flow
        - MC_DEFAULT_CLUSTER_MEMBERS=hazelcast-flow:5701
        - MC_LICENSE=${MC_LICENSE}
        - MC_INIT_CMD=./bin/mc-conf.sh security reset && ./bin/mc-conf.sh dev-mode configure

   postgres:
      image: docker.io/postgres:15
      environment:
         POSTGRES_DB: flow
         POSTGRES_USER: flow
         POSTGRES_PASSWORD: changeme
      volumes:
      - database_data:/var/lib/postgresql/data

   films-xml:
      build:
         context: "."
         dockerfile: "Dockerfile"
      expose:
         - 80
      ports:
         - "8044:80"
      deploy:
         restart_policy:
            condition: on-failure
         resources:
            limits:
               memory: 300mb

volumes:
   database_data:
